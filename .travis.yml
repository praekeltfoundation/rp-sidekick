language: python

env:
  global:
    - REGISTRY_USER=rapidproautomation
      - IMAGE_NAME=praekeltfoundation/rp-sidekick:develop
    - secure: "cZaJBMtaQx5KsliS/RjDjwG/Vvx8tRPBSYsYPCNFa+Mp9PhZk0Ao9F2QnYUjZQYNo73OazGouwQyH+E3zS4x2avfyvxlkatOb8IX6sr9AX/6N28DEW1Cy7QeSWt4KrKFuWmWjBY25W66EeoFY4cA36cy8Rk5Ekf7fNGgEAnUd4P+XVBlcpqetzNJ6IeBJuoIT+UElPiI+tU07AIgdWz6ITefRmFJAvIGbrYYEvpyVPNtcSTaIYOMyo7neQeWVHCVgJ43XqFgE1L+MUfH2VHn0c6gpMkBoFgwjarsjAofc/OopVL8fOt3hY3PlPW/SF4bDCcCwz75aRMST0Yigq6gHzmPupuTh/bHINbffuOxTHjOu2rP9RuiycXQhPtVwzAfdjFixxvMKG0cpGIIMku/WEzNAIosdNAYcuhsQnGdDiMsttjggvtp7oxyq2k2ufYyhMMsd9ZWj7LYpl8BH8O8+9pGL3KJMoOcXlqlU0iW09D27n95JN6Al4Q0mNQrrijuZZ+NA+H4kqqkE6Rgc4zxmn+YZs+adw35AShWSlObR4U5QOaNsi1/xHAOeGAx2IN1A0plwAPGnGqiC4HlMBH8USToId47ZmO2lee/W5mdG9rM6VXryamN8VGHPR6DYU2gi7r+Z0lyCHUK36foqFBXidCbeEQLisPazL4pRq1VmOY="

matrix:
  include:
    - python: '3.6'
      addons:
        postgresql: '9.4'
      services:
        - postgresql
      install:
        - pip install -r requirements.txt --use-wheel
        - pip install -r requirements-dev.txt --use-wheel
      before_script:
        - psql -U postgres -c "CREATE DATABASE rp_sidekick;"
      script:
        - flake8
        - py.test
        - python manage.py makemigrations rp_redcap --dry-run | grep 'No changes detected' || (echo 'There are changes which require migrations.' && exit 1)

    - python: '3.6'
      sudo: required
      dist: trusty
      services:
        - docker
      before_script:
        - docker pull "$IMAGE_NAME" || true
      script:
        - docker build --tag "$IMAGE_NAME" --cache-from "$IMAGE_NAME" .
      before_deploy:
        - pip install docker-ci-deploy==0.3.0
        - echo $REGISTRY_PASS
        - echo -n $REGISTRY_PASS | docker login -u "$REGISTRY_USER" --password-stdin
      deploy:
        provider: script
        script: dcd --version "$(git rev-parse --short HEAD)" --version-latest "$IMAGE_NAME"
        on:
          branch: develop
      install: []
      addons: {}
    - python: '3.6'
      sudo: required
      dist: trusty
      services:
        - docker
      before_script:
        - docker pull "$IMAGE_NAME" || true
      script:
        - docker build --tag "$IMAGE_NAME" --cache-from "$IMAGE_NAME" .
      before_deploy:
        - pip install docker-ci-deploy==0.3.0
        - echo -n $REGISTRY_PASS | docker login -u "$REGISTRY_USER" --password-stdin
      deploy:
        provider: script
        script: dcd --version "$(git tag -l --points-at HEAD)" --version-semver --version-latest "$IMAGE_NAME"
        on:
          tags: true
      install: []
      addons: {}
